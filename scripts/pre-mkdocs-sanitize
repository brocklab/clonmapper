#!/usr/bin/env python3
"""
Sanitize pandoc/latex specific syntax from markdown files before using with mkdocs.
"""

import re
import sys


REPLACE_PATTERNS = (
    (
        re.compile(r"\[@blundell2014;@kebschull2018\]"),
        "[@blundell2014]^,^[@kebschull2018]",
    ),
    (re.compile(r"^#"), "##"),
) + tuple(
    (re.compile(r"\\unit\{" + re.escape(unit) + r"\}"), replacement)
    for unit, replacement in (
        ("\\mL", "mL"),
        ("\\mM", "mM"),
        ("\\uL", "µL"),
        ("\\ug", "µg"),
        ("\\ul\\per\\ug", "µL/µg"),
        ("\\ul\\per\\mL", "µL/mL"),
        ("\\ug\\per\\mL", "µg/mL"),
        ("\\mg", "µg"),
        ("\\um", "µm"),
        ("\\uM", "µM"),
        ("\\fmol", "fmol"),
        ("TU\\per\\mL", "TU/mL"),
        ("U\\per\\mL", "TU/mL"),
        ("\\mg\\per\\mL", "mg/mL"),
    )
) + tuple(
    (re.compile(r"\\hyperref\[" + re.escape(ref) + r"\]\{\\textbf\{" + re.escape(label) + r"\}\}"), f"[{label}](#{label.replace(' ','-').lower()})")
    for ref, label in (
            ("tab:oligos", "Oligonucleotides"),
            ("tab:reagents", "Recommended Reagents")
    )
    )

# *see* \hyperref[tab:oligos]{\textbf{Oligonucleotides}}




DROP_PATTERNS = (
    re.compile(r"\\pagebreak"),
    re.compile(r"{.*\.unnumbered}"),
    re.compile(
        r"<!--.*-->",
    ),
)


def replace(line):
    for pattern, txt in REPLACE_PATTERNS:
        line = pattern.sub(txt, line)

    for pattern in DROP_PATTERNS:
        line = pattern.sub("", line)

    return line


def main():
    for line in sys.stdin:
        edited = replace(line)
        if "\\unit" in edited:
            sys.stderr.write("unreplaced unit for line: " + line + "->" + edited)
        elif not edited.startswith("$") and "\\" in edited:
            sys.stderr.write("unreplaced latex syntax: " + line + "->" + edited)
        sys.stdout.write(edited)


if __name__ == "__main__":
    main()
