#!/usr/bin/env python3
"""
Sanitize pandoc/latex specific syntax from markdown files before using with mkdocs.
"""

import re
import sys


def replace_unit_exact(unit):
    return unit_re("\\" + unit), unit


def unit_re(unit):
    return re.compile(r"\\unit\{" + re.escape(unit) + r"\}")


def ref_re(ref, label):
    return re.compile(
        r"\\hyperref\["
        + re.escape(ref)
        + r"\]\{\\textbf\{"
        + re.escape(label)
        + r"\}\}"
    )


REPLACE_PATTERNS = (
    (
        (
            re.compile(r"\[@blundell2014;@kebschull2018\]"),
            "[@blundell2014]^,^[@kebschull2018]",
        ),
        (re.compile(r"^#"), "##"),
    )
    + tuple(
        (unit_re(unit), replacement)
        for unit, replacement in (
            ("\\uL", "µL"),
            ("\\ug", "µg"),
            ("\\uL\\per\\ug", "µL/µg"),
            ("\\ug\\per\\mL", "µg/mL"),
            ("\\um", "µm"),
            ("\\uM", "µM"),
            ("TU\\per\\mL", "TU/mL"),
            ("U\\per\\mL", "TU/mL"),
            ("\\mg\\per\\mL", "mg/mL"),
        )
    )
    + tuple(
        replace_unit_exact(unit)
        for unit in (
            "kV",
            "ms",
            "L",
            "cm",
            "mm",
            "mL",
            "mM",
            "fmol",
        )
    )
    + tuple(
        (
            ref_re(ref, label),
            f"[{label}](#{label.replace(' ','-').lower()})",
        )
        for ref, label in (
            ("tab:oligos", "Oligonucleotides"),
            ("tab:reagents", "Recommended Reagents"),
        )
    )
)

DROP_PATTERNS = (
    re.compile(r"\\pagebreak"),
    re.compile(r"{.*\.unnumbered}"),
    re.compile(
        r"<!--.*-->",
    ),
)


def replace(line):
    for pattern, txt in REPLACE_PATTERNS:
        line = pattern.sub(txt, line)

    for pattern in DROP_PATTERNS:
        line = pattern.sub("", line)

    return line


def main():
    for line in sys.stdin:
        edited = replace(line)
        if "\\unit" in edited:
            sys.stderr.write("unreplaced unit for line: " + line + "->" + edited)
        elif not edited.startswith("$") and "\\" in edited:
            sys.stderr.write("unreplaced latex syntax: " + line + "->" + edited)
        sys.stdout.write(edited)


if __name__ == "__main__":
    main()
